<%# Edit Password Page %>
<div class="rounded-2xl p-4 sm:p-8 shadow-xl max-w-3xl mx-auto">
  <div class="text-center mb-8">
    <div class="mx-auto h-16 w-16 flex-shrink-0 rounded-xl bg-gradient-to-br from-indigo-500 to-purple-600 flex items-center justify-center mb-4">
      <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
      </svg>
    </div>
    <h1 class="text-2xl font-bold text-gray-200"><%= t('passwords.entry.edit.title') %></h1>
    <p class="mt-2 text-sm text-gray-400"><%= t('passwords.entry.edit.subtitle') %></p>
  </div>

  <%= form_with(model: @password_entry, class: "sm:space-y-2") do |f| %>
    <% if @password_entry.errors.any? %>
      <div class="rounded-xl p-4 bg-red-500/10 border border-red-500/20">
        <div class="text-sm font-medium text-red-400 mb-2">
          <%= t('errors.form_contains_errors', count: @password_entry.errors.count) %>
        </div>
        <ul class="list-disc list-inside text-sm text-red-400">
          <% @password_entry.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <% decrypted_data = @password_entry.decrypt_data(current_key) %>

    <%# Name Field %>
    <div class="rounded-xl p-4 hover:bg-white/5 transition-colors duration-200">
      <div class="flex items-center space-x-3 mb-2">
        <div class="p-2 rounded-lg bg-indigo-500/10">
          <svg class="w-5 h-5 text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"/>
          </svg>
        </div>
        <label class="block text-sm font-medium text-gray-400"><%= t('passwords.entry.form.name.label') %></label>
      </div>
      <%= f.text_field :name, autocomplete: "off", class: "w-full bg-white/5 border border-gray-200/20 rounded-lg px-4 py-2 text-gray-200 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-transparent transition-colors duration-200", placeholder: t('passwords.entry.form.name.placeholder') %>
    </div>

    <%# Website Field %>
    <div class="rounded-xl p-4 hover:bg-white/5 transition-colors duration-200">
      <div class="flex items-center space-x-3 mb-2">
        <div class="p-2 rounded-lg bg-indigo-500/10">
          <svg class="w-5 h-5 text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"/>
          </svg>
        </div>
        <label class="block text-sm font-medium text-gray-400"><%= t('passwords.entry.form.website.label') %></label>
      </div>
      <%= f.url_field :url, value: decrypted_data['url'], autocomplete: "off", class: "w-full bg-white/5 border border-gray-200/20 rounded-lg px-4 py-2 text-gray-200 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-transparent transition-colors duration-200", placeholder: t('passwords.entry.form.website.placeholder') %>
    </div>

    <%# Username Field %>
    <div class="rounded-xl p-4 hover:bg-white/5 transition-colors duration-200">
      <div class="flex items-center space-x-3 mb-2">
        <div class="p-2 rounded-lg bg-indigo-500/10">
          <svg class="w-5 h-5 text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
          </svg>
        </div>
        <label class="block text-sm font-medium text-gray-400"><%= t('passwords.entry.form.username.label') %></label>
      </div>
      <%= f.text_field :username, value: decrypted_data['username'], autocomplete: "off", class: "w-full bg-white/5 border border-gray-200/20 rounded-lg px-4 py-2 text-gray-200 font-mono placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-transparent transition-colors duration-200", placeholder: t('passwords.entry.form.username.placeholder') %>
    </div>

    <%# Password Field %>
    <div class="rounded-xl p-4 hover:bg-white/5 transition-colors duration-200">
      <div class="flex items-center space-x-3 mb-2">
        <div class="p-2 rounded-lg bg-indigo-500/10">
          <svg class="w-5 h-5 text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
          </svg>
        </div>
        <label class="block text-sm font-medium text-gray-400"><%= t('passwords.entry.form.password.label') %></label>
      </div>
      <div class="relative">
        <%= f.password_field :password, value: decrypted_data['password'], autocomplete: "new-password", class: "w-full bg-white/5 border border-gray-200/20 rounded-lg px-4 py-2 text-gray-200 font-mono placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-transparent transition-colors duration-200", id: "password-field", placeholder: t('passwords.entry.form.password.placeholder') %>
        <button type="button" onclick="togglePasswordVisibility()" class="absolute right-2 top-1/2 transform -translate-y-1/2 p-2 text-gray-400 hover:text-indigo-400 rounded-lg hover:bg-white/5 transition-all duration-150" title="<%= t('passwords.entry.form.password.show') %>">
          <svg id="show-password-icon" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
          </svg>
          <svg id="hide-password-icon" class="hidden w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"/>
          </svg>
        </button>
      </div>
      <div class="mt-2 flex items-center space-x-2">
        <button type="button" onclick="generatePassword()" class="text-sm text-indigo-400 hover:text-indigo-300 transition-colors duration-150 flex items-center space-x-1">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
          </svg>
          <span><%= t('passwords.entry.form.password.generate') %></span>
        </button>
      </div>
    </div>

    <%# Action Buttons %>
    <div class="flex items-center justify-end space-x-4 pt-4">
      <%= link_to t('passwords.entry.form.cancel'), password_entry_path(@password_entry), class: "text-gray-400 hover:text-gray-300 transition-colors duration-150" %>
      <%= f.submit t('passwords.entry.form.submit.update'), class: "inline-flex items-center px-6 py-3 rounded-xl bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold hover:from-indigo-600 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-150" %>
    </div>
  <% end %>
</div>

<%# JavaScript functionality %>
<%= javascript_tag do %>
  function togglePasswordVisibility() {
    const passwordField = document.getElementById('password-field');
    const showIcon = document.getElementById('show-password-icon');
    const hideIcon = document.getElementById('hide-password-icon');
    
    if (passwordField.type === 'password') {
      passwordField.type = 'text';
      showIcon.classList.add('hidden');
      hideIcon.classList.remove('hidden');
    } else {
      passwordField.type = 'password';
      showIcon.classList.remove('hidden');
      hideIcon.classList.add('hidden');
    }
  }

  function generatePassword() {
    // Generate a 16-character random password with uppercase, lowercase, numbers, and special characters
    const length = 16;
    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-=[]{}|;:,.<>?';
    let password = '';
    
    // Ensure at least one uppercase, lowercase, number, and special character
    password += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[Math.floor(Math.random() * 26)];
    password += 'abcdefghijklmnopqrstuvwxyz'[Math.floor(Math.random() * 26)];
    password += '0123456789'[Math.floor(Math.random() * 10)];
    password += '!@#$%^&*()_+-=[]{}|;:,.<>?'[Math.floor(Math.random() * 29)];
    
    // Fill remaining length
    for (let i = 4; i < length; i++) {
      password += charset[Math.floor(Math.random() * charset.length)];
    }
    
    // Shuffle password characters
    password = password.split('').sort(() => Math.random() - 0.5).join('');
    
    // Set password field value
    document.getElementById('password-field').value = password;
    
    // Show password
    document.getElementById('password-field').type = 'text';
    document.getElementById('show-password-icon').classList.add('hidden');
    document.getElementById('hide-password-icon').classList.remove('hidden');
    
    // Add visual feedback for successful generation
    const notification = document.createElement('div');
    notification.className = 'fixed bottom-4 right-4 bg-indigo-600 text-white px-4 py-2 rounded-lg shadow-lg transform transition-all duration-300 translate-y-full';
    notification.textContent = '<%= t('passwords.generator.success') %>';
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.style.transform = 'translateY(0)';
    }, 100);
    
    setTimeout(() => {
      notification.style.transform = 'translateY(full)';
      setTimeout(() => {
        notification.remove();
      }, 300);
    }, 3000);
  }
<% end %> 